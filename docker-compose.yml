services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: workflow
      POSTGRES_PASSWORD: workflow123
      POSTGRES_DB: workflow_engine
    ports:
      - "5876:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U workflow -d workflow_engine"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    build:
      context: ./api
      dockerfile: Dockerfile.migrator
    volumes:
      - ./api:/app
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=postgres://workflow:workflow123@postgres:5432/workflow_engine?sslmode=disable
      - GOOSE_MIGRATION_DIR=pkg/postgres/migrations
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8086:8080"
    environment:
      - ENV=development
      - GIN_MODE=debug
      - DATABASE_URL=postgres://workflow:workflow123@postgres:5432/workflow_engine?sslmode=disable
      - CORS_ALLOWED_ORIGINS=http://localhost:3003
      - CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - CORS_ALLOWED_HEADERS=Content-Type,Authorization
    volumes:
      - ./api:/app
      - /app/tmp
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "3003:3000"
    volumes:
      - ./web:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8086
      - WATCHPACK_POLLING=true # Enable polling for better file watching in Docker
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
